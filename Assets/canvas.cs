using UnityEngine;

public class EscToggleUI : MonoBehaviour
{
    [SerializeField] private GameObject uiPanel;
    [SerializeField] private GameObject playerControllerObject;
    [SerializeField] private GameObject alwaysVisibleUI;

    private bool isVisible = false;

void Start()
{
    if (uiPanel == null)
    {
        Debug.LogError("UI Panel –Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ –≤ —ñ–Ω—Å–ø–µ–∫—Ç–æ—Ä—ñ!");
        return;
    }

    // –ê–∫—Ç–∏–≤—É—î–º–æ –ø–∞–Ω–µ–ª—å UI –Ω–∞ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏
    uiPanel.SetActive(true);

    // –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∫—É—Ä—Å–æ—Ä–∞
    Cursor.lockState = CursorLockMode.Locked;
    Cursor.visible = false;

    // –ê–∫—Ç–∏–≤—É—î–º–æ —ñ–Ω—à—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ UI, —è–∫—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–≤–∂–¥–∏ –≤–∏–¥–∏–º–∏–º–∏
    if (alwaysVisibleUI != null)
    {
        alwaysVisibleUI.SetActive(true);
    }
}


    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Escape))
        {
            ToggleMenu();
        }
    }

    public void ToggleMenu()
    {
        isVisible = !isVisible;
        uiPanel.SetActive(isVisible);

        Cursor.lockState = isVisible ? CursorLockMode.None : CursorLockMode.Locked;
        Cursor.visible = isVisible;

        if (playerControllerObject != null)
        {
            var controller = playerControllerObject.GetComponent<FirstPersonController>();
            if (controller != null)
            {
                controller.enabled = !isVisible;
            }
        }

        if (alwaysVisibleUI != null)
        {
            alwaysVisibleUI.SetActive(true);
        }
    }

    // üü¢ –í–ò–ö–õ–ò–ö–ê–¢–ò –¶–ï–ô –ú–ï–¢–û–î –ó –ö–ù–û–ü–ö–ò PLAY
    public void CloseMenu()
    {
        isVisible = false;
        uiPanel.SetActive(false);

        Cursor.lockState = CursorLockMode.Locked;
        Cursor.visible = false;

        if (playerControllerObject != null)
        {
            var controller = playerControllerObject.GetComponent<FirstPersonController>();
            if (controller != null)
            {
                controller.enabled = true;
            }
        }

        if (alwaysVisibleUI != null)
        {
            alwaysVisibleUI.SetActive(true);
        }
    }
}
